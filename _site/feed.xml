<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Samuel's Blog</title>
    <description>You are reading my blog </description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 09 Oct 2018 16:48:21 +0800</pubDate>
    <lastBuildDate>Tue, 09 Oct 2018 16:48:21 +0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Java设计模式笔记（3）—— 原型模式</title>
        <description>&lt;h2 id=&quot;定义&quot;&gt;定义&lt;/h2&gt;
&lt;p&gt;用原型实例指定创建对象的种类，并通过拷贝这些原型创建新的对象&lt;/p&gt;

&lt;h2 id=&quot;使用场景&quot;&gt;使用场景&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;类初始化需要消耗非常多的资源，通过原型拷贝避免这些消耗&lt;/li&gt;
  &lt;li&gt;通过 new 产生一个对象需要非常繁琐的数据准备或访问权限&lt;/li&gt;
  &lt;li&gt;一个对象需要提供给其他对象访问，而且各个调用者可能都需要修改其值时，可以考虑使用原型模式拷贝，即保护性拷贝&lt;/li&gt;
  &lt;li&gt;需要注意的是，通过实现 Cloneable 接口的原型模式在调用 clone 函数构造实例时并不一定比通过 new 操作速度快。只有当通过 new 构造对象较为耗时或者说成本较高时，通过 clone 方法才能获得效率上的提升。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uml-类图&quot;&gt;UML 类图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/img/design-pattern-prototype-uml.png&quot; alt=&quot;UML类图&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;实现&quot;&gt;实现&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WordDocument&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cloneable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mImages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WordDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;------- WordDocument 构造函数 -------&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WordDocument&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CloneNotSupportedException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;WordDocument&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WordDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mImages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mImages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getImages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mImages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;mImages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;showDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;----- Word content start -----&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Text: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Images list: &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mImages&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image name: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;----- Word content end -----&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PrototypeTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WordDocument&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;originDoc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WordDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;originDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This is first document&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;originDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Image 1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;originDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Image 2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;originDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Image 3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;originDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;showDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;WordDocument&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;doc2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;originDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CloneNotSupportedException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;doc2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;showDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;doc2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;This is second document&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;doc2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Image 4&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;doc2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;showDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;originDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;showDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;原型模式本质上就是对象拷贝，容易出现的问题时是深拷贝和浅拷贝。使用原型模式可以解决构建复杂对象的资源消耗问题，能够在某些场景下提升创建对象的效率。还有一个重要的用途时保护性拷贝，也就是某个对象对外是只读的，为了防止外部对这个只读对象修改，通常可以通过返回一个对象拷贝的形式实现只读的限制&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;优点
    &lt;ol&gt;
      &lt;li&gt;原型模式是在内存中二进制流的拷贝，要比直接 new 一个对象性能要好很多，特别时要在一个循环体内产生大量对象时，原型模式可以更好地体现其优点&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;缺点
    &lt;ol&gt;
      &lt;li&gt;这既是它的优点也是缺点，直接在内存中拷贝，构造函数不会执行，在实际开发中应该注意这个潜在的问题&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 04 Sep 2018 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/09/04/java-design-pattern-prototype/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/04/java-design-pattern-prototype/</guid>
        
        <category>设计模式</category>
        
        <category>Java</category>
        
        
      </item>
    
      <item>
        <title>Java设计模式笔记（2）—— Builder模式</title>
        <description>&lt;h2 id=&quot;定义&quot;&gt;定义&lt;/h2&gt;
&lt;p&gt;将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示&lt;/p&gt;

&lt;h2 id=&quot;使用场景&quot;&gt;使用场景&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;相同的方法，不同的执行顺序，产生不同的事件结果时&lt;/li&gt;
  &lt;li&gt;多个部件或零件，都可以装配到一个对象中，但是产生的运行结果又不相同时&lt;/li&gt;
  &lt;li&gt;产品类非常复杂，或者产品类中的调用顺序不同产生了不同的作用&lt;/li&gt;
  &lt;li&gt;当初始化一个对象特别复杂，如参数多，且很多参数都具有默认值时&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;uml-类图&quot;&gt;UML 类图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/img/design-pattern-builder-uml.png&quot; alt=&quot;UML类图&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;实现&quot;&gt;实现&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Computer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//required parameters&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RAM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//optional parameters&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isGraphicsCardEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isBluetoothEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;


    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getHDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRAM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RAM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isGraphicsCardEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isGraphicsCardEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isBluetoothEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isBluetoothEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Computer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ComputerBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HDD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RAM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RAM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isGraphicsCardEnabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isGraphicsCardEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isBluetoothEnabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isBluetoothEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//Builder Class&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ComputerBuilder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// required parameters&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RAM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// optional parameters&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isGraphicsCardEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isBluetoothEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ComputerBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hdd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;HDD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hdd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RAM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComputerBuilder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setGraphicsCardEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isGraphicsCardEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isGraphicsCardEnabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isGraphicsCardEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ComputerBuilder&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setBluetoothEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isBluetoothEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isBluetoothEnabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isBluetoothEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Computer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Computer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestBuilderPattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Computer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Computer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ComputerBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;500 GB&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2 GB&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBluetoothEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setGraphicsCardEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;总结&quot;&gt;总结&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;优点
    &lt;ol&gt;
      &lt;li&gt;良好的封装性，使用建造者模式可以使客户端不必知道产品内部组成的细节&lt;/li&gt;
      &lt;li&gt;建造者独立，容易扩展&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;缺点
    &lt;ol&gt;
      &lt;li&gt;会产生多余的Builder对象以及Director对象&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 03 Sep 2018 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/09/03/java-design-pattern-builder/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/03/java-design-pattern-builder/</guid>
        
        <category>设计模式</category>
        
        <category>Java</category>
        
        
      </item>
    
      <item>
        <title>Java设计模式笔记（1）—— 单例模式</title>
        <description>&lt;h2 id=&quot;定义&quot;&gt;定义&lt;/h2&gt;
&lt;p&gt;确保某一个类只有一个实例，而且自行实例化并向这个系统提供这个实例&lt;/p&gt;
&lt;h2 id=&quot;使用场景&quot;&gt;使用场景&lt;/h2&gt;
&lt;p&gt;确保某个类有且只有一个对象的场景，避免产生多个对象消耗过多的资源，或者某种类型的对象只应该有且只有一个。例如，创建一个对象需要消耗的资源过多，如要访问 IO 和数据库等资源，这时就要考虑使用单例模式了&lt;/p&gt;

&lt;h2 id=&quot;uml-类图&quot;&gt;UML 类图&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/img/design-pattern-singleton-uml.png&quot; alt=&quot;UML类图&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;实现&quot;&gt;实现&lt;/h2&gt;
&lt;h3 id=&quot;懒汉模式&quot;&gt;懒汉模式&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Singleton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;优点：在使用时才会被实例化，节约资源&lt;/li&gt;
  &lt;li&gt;缺点：第一次加载时需要进行实例化，反应稍慢，最大的问题是每次调用 getInstance 都进行同步，造成不必要的同步开销&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;double-check-lockdcl实现单例&quot;&gt;Double Check Lock(DCL)实现单例&lt;/h3&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Singleton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;mInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;优点：第一次执行 getInstance 单例对象才会被实例化，效率高&lt;/li&gt;
  &lt;li&gt;缺点：第一次加载时反应稍慢，也由于 Java 内存模型的原因偶尔会失败&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;静态内部类&quot;&gt;静态内部类&lt;/h3&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Singleton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SingletonHolder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SingletonHolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Singleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;既能确保线程安全，也能保证单例对象的唯一性&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;其他&quot;&gt;其他&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;枚举单例&lt;/li&gt;
  &lt;li&gt;使用容器实现单例&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 02 Sep 2018 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/09/02/java-design-pattern-singleton/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/02/java-design-pattern-singleton/</guid>
        
        <category>设计模式</category>
        
        <category>Java</category>
        
        
      </item>
    
      <item>
        <title>macOS crontab 定时任务配置</title>
        <description>&lt;h2 id=&quot;开启-crontab&quot;&gt;开启 crontab&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;查看 crontab 是否启动&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo launchctl list | grep cron&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;检查需要的文件&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls -al /etc/crontab&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果 crontab 文件不存在则创建&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo touch /etc/crontab&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;crontab-命令参数&quot;&gt;crontab 命令参数&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;-u user：用来设定某个用户的crontab服务；&lt;/li&gt;
  &lt;li&gt;file：file是命令文件的名字,表示将file做为crontab的任务列表文件并载入crontab。如果在命令行中没有指定这个文件，crontab命令将接受标准输入（键盘）上键入的命令，并将它们载入crontab。&lt;/li&gt;
  &lt;li&gt;-e：编辑某个用户的crontab文件内容。如果不指定用户，则表示编辑当前用户的crontab文件。&lt;/li&gt;
  &lt;li&gt;-l：显示某个用户的crontab文件内容，如果不指定用户，则表示显示当前用户的crontab文件内容。&lt;/li&gt;
  &lt;li&gt;-r：从/var/spool/cron目录中删除某个用户的crontab文件，如果不指定用户，则默认删除当前用户的crontab文件。&lt;/li&gt;
  &lt;li&gt;-i：在删除用户的crontab文件时给确认提示。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;在使用crontab执行脚本时，如果没有执行任务，请查看crontab和脚本是否开启执行权限&lt;/p&gt;

  &lt;p&gt;eg: */1 * * * * /bin/date » /User/Username(你的用户名)/time.txt表示每分钟输出当前时间到time.txt上&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;如果出现以下问题&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[hayek@mac:/www/] 02:33:22 PM: crontab -e
crontab: no crontab for hayek - using an empty one
crontab: &quot;/usr/bin/vi&quot; exited with status 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;方法1：&lt;code class=&quot;highlighter-rouge&quot;&gt;EDITOR=vim crontab -e&lt;/code&gt; 直接编辑，以后直接&lt;code class=&quot;highlighter-rouge&quot;&gt;crontab -e&lt;/code&gt;直接打开就行。&lt;/li&gt;
  &lt;li&gt;方法2：export EDITOR=vim&lt;/li&gt;
  &lt;li&gt;方法3：向cron进程提交一个crontab文件之前，首先要设置环境变量EDITOR。cron进程根据它来确定使用哪个编辑器编辑crontab文件。9 9 %的UNIX和LINUX用户都使用vi，如果你也是这样，那么你就编辑$HOME目录下的. profile文件，在其中加入这样一行:&lt;code class=&quot;highlighter-rouge&quot;&gt;EDITOR=vi; export EDITOR&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;crontab的文件格式&quot;&gt;crontab的文件格式&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;第1列：分钟，0～59&lt;/li&gt;
  &lt;li&gt;第2列：小时，0～23（0表示子夜）&lt;/li&gt;
  &lt;li&gt;第3列：日期，1～31&lt;/li&gt;
  &lt;li&gt;第4列：月份，1～12&lt;/li&gt;
  &lt;li&gt;第5列：星期，0～7（0和7表示星期天）&lt;/li&gt;
  &lt;li&gt;第6列：要运行的命令（如果有多个命令用 &amp;amp;&amp;amp; 隔开）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;特殊字符&quot;&gt;特殊字符&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;星号（*）：代表所有可能的值，例如month字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作。&lt;/li&gt;
  &lt;li&gt;逗号（,）：可以用逗号隔开的值指定一个列表范围，例如，“1,2,5,7,8,9”&lt;/li&gt;
  &lt;li&gt;中杠（-）：可以用整数之间的中杠表示一个整数范围，例如“2-6”表示“2,3,4,5,6”&lt;/li&gt;
  &lt;li&gt;正斜线（/）：可以用正斜线指定时间的间隔频率，例如“0-23/2”表示每两小时执行一次。同时正斜线可以和星号一起使用，例如*/10，如果用在minute字段，表示每十分钟执行一次。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;实例&quot;&gt;实例&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;每1分钟执行一次&lt;/p&gt;

    &lt;p&gt;*/1 * * * *&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;每小时的第3和第15分钟执行&lt;/p&gt;

    &lt;p&gt;3,15 * * * *&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;每隔两天的上午8点到11点的第3和第15分钟执行&lt;/p&gt;

    &lt;p&gt;3,15 8-11 */2 * *&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;每个星期一的上午8点到11点的第3和第15分钟执行&lt;/p&gt;

    &lt;p&gt;3,15 8-11 * * 1&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;备份恢复-crontab&quot;&gt;备份/恢复 crontab&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;备份
crontab -l &amp;gt; $HOME/.mycron
恢复
crontab $HOME/.mycron
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;crontab服务的重启关闭开启&quot;&gt;crontab服务的重启关闭，开启&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;mac系统下&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  sudo /usr/sbin/cron start
  sudo /usr/sbin/cron restart
  sudo /usr/sbin/cron stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ubuntu:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  sudo /etc/init.d/cron start
  sudo /etc/init.d/cron stop
  sudo /etc/init.d/cron restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;日志&quot;&gt;日志&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;默认&lt;/p&gt;

    &lt;p&gt;不做任何处理，日志会发送到/var/mail/Username&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;重定向&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  * * * * * command &amp;gt;&amp;gt; /Users/Samuel/Desktop/command.log 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;2&amp;gt;&amp;amp;1 表示把标准错误输出重定向到与标准输出一致，即command.log&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;月份重命名&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  0 12 * * * command &amp;gt;&amp;gt; &quot;/Users/Samuel/Desktop/$(date +&quot;\%Y-\%m&quot;).log&quot; 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;星期重命名&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  0 12 * * * command &amp;gt;&amp;gt; &quot;/Users/Samuel/Desktop/$(date +&quot;\%Y-W\%W&quot;).log&quot; 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;小时重命名&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  0 12 * * * command &amp;gt;&amp;gt; &quot;/Users/Samuel/Desktop/$(date +&quot;\%Y-\%m-\%d_\%H&quot;).log&quot; 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;其他&quot;&gt;其他&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;环境变量问题，尽量使用绝对路径&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;python编码问题&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;export LANG=zh_CN.UTF-8&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 04 Dec 2017 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/12/04/macOS-crontab-configuration/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/12/04/macOS-crontab-configuration/</guid>
        
        <category>macOS</category>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>Android 开发 Gradle 配置</title>
        <description>&lt;h1 id=&quot;android-开发-gradle-配置&quot;&gt;Android 开发 Gradle 配置&lt;/h1&gt;
&lt;p&gt;Android 开发中经常需要打包测试，配置好 Gradle 后可以尽可能自动化，先看代码。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-`gradle&quot;&gt;def releaseTime() {
    return new Date().format(&quot;yyyyMMddHHmm&quot;)
}

def cmd = 'git rev-list HEAD --count'
def initVersionName = '1.0.0'
def gitVersionCode = cmd.execute().text.trim().toInteger()
def gitVersionName = initVersionName + '.' + gitVersionCode


android {
    signingConfigs {
        releaseconfig {
            keyAlias 'abc'
            keyPassword 'abc123456'
            storeFile file('./abc.jks')
            storePassword 'abc123456'
        }
    }
    compileSdkVersion 25
    buildToolsVersion &quot;25.0.1&quot;
    defaultConfig {
        applicationId &quot;com.xyz.abc&quot;
        minSdkVersion 16
        targetSdkVersion 22
        versionCode gitVersionCode
        versionName gitVersionName
        multiDexEnabled true
        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;
    }

    productFlavors {
        Xiaomi {}
        Baidu {}
        Ali {}
        Yingyongbao {}
        Market360 {}
        Huawei {}
    }

    productFlavors.all {
        flavor -&amp;gt;
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    buildTypes {
        debug {

            versionNameSuffix &quot;-debug&quot;
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            signingConfig signingConfigs.releaseconfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false

            applicationVariants.all { variant -&amp;gt;

                variant.outputs.each { output -&amp;gt;
                    def outputFile = output.outputFile
                    if (outputFile != null &amp;amp;&amp;amp; outputFile.name.endsWith('.apk')) {
                        def fileName = &quot;abc-${variant.buildType.name}-v${defaultConfig.versionName}-${variant.productFlavors[0].name}-${releaseTime()}.apk&quot;
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }

        }
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;先定义了几个变量：&lt;code class=&quot;highlighter-rouge&quot;&gt;releaseTime&lt;/code&gt;代表时间，&lt;code class=&quot;highlighter-rouge&quot;&gt;cmd&lt;/code&gt; 代表 git 提交次数，加上友盟的多渠道打包，最后生成的 apk 就会像这样：&lt;code class=&quot;highlighter-rouge&quot;&gt;abc-release-v1.0.0.18-Yingyongbao-201603161510.apk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;再配合蒲公英和 Jenkins 自动化部署，非常方便项目打包和测试。&lt;/p&gt;

</description>
        <pubDate>Sat, 10 Jun 2017 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/06/10/android-development-gradle-configuration/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/06/10/android-development-gradle-configuration/</guid>
        
        <category>Android</category>
        
        <category>Gradle</category>
        
        
      </item>
    
      <item>
        <title>Android 常用开发工具</title>
        <description>&lt;p&gt;正所谓工欲善其事必先利其器，Android 开发中用到了很多软件（macOS 平台），写下来留个备忘。&lt;/p&gt;

&lt;h3 id=&quot;android-studio&quot;&gt;Android Studio&lt;/h3&gt;
&lt;p&gt;Google 官方指定的开发工具（&lt;a href=&quot;https://developer.android.com/studio/index.html&quot;&gt;官网&lt;/a&gt;）。还在用 Eclipse 的应该大多是由于历史遗留原因，尽快转吧。如果访问不了官方网站，可以试试国内的：&lt;a href=&quot;http://www.android-studio.org/&quot;&gt;Android Studio 中文&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;intelij-idea&quot;&gt;Intelij IDEA&lt;/h3&gt;
&lt;p&gt;总有要单独写点 Java 程序的时候（&lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;官网&lt;/a&gt;），Intellij IDEA 更好用。实际上 Android Studio 就是基于 Intellij IDEA 的。JetBrains 出的几款编辑器都非常好用。&lt;/p&gt;

&lt;h3 id=&quot;genymotion&quot;&gt;Genymotion&lt;/h3&gt;
&lt;p&gt;最快的安卓虚拟机，需要下载 VirtualBox。个人版免费（&lt;a href=&quot;https://www.genymotion.com/&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;

&lt;h3 id=&quot;android-file-transfer&quot;&gt;Android File Transfer&lt;/h3&gt;
&lt;p&gt;官方的文件传输工具，连接手机和电脑（&lt;a href=&quot;https://www.android.com/filetransfer/&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;

&lt;h3 id=&quot;handshaker&quot;&gt;HandShaker&lt;/h3&gt;
&lt;p&gt;锤子出品的文件传输和管理工具，更直观好用（&lt;a href=&quot;https://itunes.apple.com/us/app/handshaker-manage-your-android-phones-at-ease/id1012930195?mt=12&quot;&gt;Mac App Store链接&lt;/a&gt;）&lt;/p&gt;

&lt;h3 id=&quot;sourcetree&quot;&gt;SourceTree&lt;/h3&gt;
&lt;p&gt;简单易用的版本控制工具（&lt;a href=&quot;https://www.sourcetreeapp.com/&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;

&lt;h3 id=&quot;postman&quot;&gt;Postman&lt;/h3&gt;
&lt;p&gt;接口调试，可下载 Chrome 插件或本地客户端（&lt;a href=&quot;https://www.getpostman.com/&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;

&lt;h3 id=&quot;androidtool&quot;&gt;AndroidTool&lt;/h3&gt;
&lt;p&gt;方便截图和录屏（&lt;a href=&quot;https://github.com/mortenjust/androidtool-mac&quot;&gt;Github 地址&lt;/a&gt;）&lt;/p&gt;

&lt;h3 id=&quot;vysor&quot;&gt;Vysor&lt;/h3&gt;
&lt;p&gt;Chrome 插件，可以把真机投影到电脑上（&lt;a href=&quot;https://chrome.google.com/webstore/detail/vysor/gidgenkbbabolejbgbpnhbimgjbffefm&quot;&gt;Chrome 商店地址&lt;/a&gt;）&lt;/p&gt;

&lt;h3 id=&quot;airmirror&quot;&gt;AirMirror&lt;/h3&gt;
&lt;p&gt;投影真机到电脑上，需要配合 AirDroid 使用（&lt;a href=&quot;https://chrome.google.com/webstore/detail/airmirror/macmgoeeggnlnmpiojbcniblabkdjphe&quot;&gt;Chrome 商店地址&lt;/a&gt;）&lt;/p&gt;

&lt;h3 id=&quot;atom&quot;&gt;Atom&lt;/h3&gt;
&lt;p&gt;Github 出的编辑器，非常好用，插件也足够丰富，已成为日常主力（&lt;a href=&quot;https://atom.io/&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;
&lt;h3 id=&quot;sublime-text-3&quot;&gt;Sublime Text 3&lt;/h3&gt;
&lt;p&gt;老牌的编辑器了，处理 BOM 问题的时候会用到（&lt;a href=&quot;https://www.sublimetext.com/3&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;

&lt;h3 id=&quot;sqlpro-for-sqlite&quot;&gt;SQLPro for SQLite&lt;/h3&gt;
&lt;p&gt;sqlite 可视化管理工具（&lt;a href=&quot;https://www.sqlitepro.com/&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Jun 2017 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/06/01/android-common-development-tools/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/06/01/android-common-development-tools/</guid>
        
        <category>Android</category>
        
        <category>工具</category>
        
        
      </item>
    
      <item>
        <title>Android 代码命名规范</title>
        <description>&lt;h2 id=&quot;命名方法&quot;&gt;命名方法&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;大驼峰式命名法&lt;/p&gt;

    &lt;p&gt;每个单词的第一个字母都大写&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;小驼峰式命名法&lt;/p&gt;

    &lt;p&gt;除了第一个单词，每个单词的第一个字母都大写&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下划线命名法&lt;/p&gt;

    &lt;p&gt;单词与单词间用下划线做间隔&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;匈牙利命名法&lt;/p&gt;

    &lt;p&gt;基本原则是：变量名=属性+类型+对象描述&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;android-命名规范&quot;&gt;Android 命名规范&lt;/h2&gt;

&lt;h3 id=&quot;包命名规范&quot;&gt;包命名规范&lt;/h3&gt;

&lt;p&gt;采用&lt;strong&gt;反域名命名规则&lt;/strong&gt;，包名全部小写，连续的单词只是简单地连接起来，不使用下划线，一级包名为com，二级包名为xxx（可以是公司域名或者个人命名），三级包名根据应用进行命名，四级包名为模块名或层级名。如：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;com.isa.crm.activity&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;com.isa.crm.adapter&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;java类命名规范&quot;&gt;JAVA类命名规范&lt;/h3&gt;

&lt;p&gt;采用&lt;strong&gt;大驼峰式命名法&lt;/strong&gt;，尽量避免缩写，除非该缩写是众所周知的，比如HTML，URL,如果类名称包含单词缩写，则单词缩写的每个字母均应大写。如：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ProductListActivity&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;ProductListAdapter&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;JsonHTTPSRequest&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;接口命名规范&quot;&gt;接口命名规范&lt;/h3&gt;

&lt;p&gt;命名规则与类一样采用&lt;strong&gt;大驼峰命名法&lt;/strong&gt;，多以&lt;code class=&quot;highlighter-rouge&quot;&gt;able&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;ible&lt;/code&gt;结尾。例如：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;interface Runable&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;interface Accessible&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;成员变量命名规范&quot;&gt;成员变量命名规范&lt;/h3&gt;

&lt;p&gt;采用&lt;strong&gt;小驼峰命名法&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;临时变量命名&lt;/p&gt;

    &lt;p&gt;使用标准的Java命名方法，不推荐使用Google的m命名法。例如：&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;private String userName&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;常量命名&lt;/p&gt;

    &lt;p&gt;常量使用全大写字母加下划线的方式命名，例如：&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;public static final String TAG = &quot;tag”;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;控件实例命名&lt;/p&gt;

    &lt;p&gt;不少文章说，类中控件名称必须与xml布局id保持一致，个人对这条存疑，我是这么做的：&lt;/p&gt;

    &lt;p&gt;布局文件中Button的id为&lt;code class=&quot;highlighter-rouge&quot;&gt;android:id=&quot;@+id/btn_pay_main”&lt;/code&gt;(main是xml文件对应的Activity或其他）&lt;/p&gt;

    &lt;p&gt;类中的对象名称则为&lt;code class=&quot;highlighter-rouge&quot;&gt;private Button btnPayMain&lt;/code&gt;,这是Android Studio中的&lt;code class=&quot;highlighter-rouge&quot;&gt;Android Layout ID Converter&lt;/code&gt;插件自动生成的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;方法命名规范&quot;&gt;方法命名规范&lt;/h3&gt;

&lt;p&gt;动词或动名词，采用小驼峰命名法。例如:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;run()&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;onCreate()&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;syncProducts()&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;方法&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;initXX()&lt;/td&gt;
      &lt;td&gt;初始化相关方法,使用init为前缀标识，如初始化布局initView()&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;isXX()&lt;/td&gt;
      &lt;td&gt;checkXX()方法返回值为boolean型的请使用is或check为前缀标识&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;getXX()&lt;/td&gt;
      &lt;td&gt;返回某个值的方法，使用get为前缀标识&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;processXX()&lt;/td&gt;
      &lt;td&gt;对数据进行处理的方法，尽量使用process为前缀标识&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;displayXX()&lt;/td&gt;
      &lt;td&gt;弹出提示框和提示信息，使用display为前缀标识&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;saveXX()&lt;/td&gt;
      &lt;td&gt;与保存数据相关的，使用save前缀标识&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;resetXX()&lt;/td&gt;
      &lt;td&gt;对数据重组的，使用reset前缀标识&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;clearXX()&lt;/td&gt;
      &lt;td&gt;清除数据相关的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;removeXXX()&lt;/td&gt;
      &lt;td&gt;清除数据相关的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;drawXXX()&lt;/td&gt;
      &lt;td&gt;绘制数据或效果相关的，使用draw前缀标识&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;布局文件layout命名规范&quot;&gt;布局文件（&lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt;）命名规范&lt;/h3&gt;

&lt;p&gt;全部小写，采用下划线命名法。&lt;/p&gt;

&lt;p&gt;activity layout：&lt;code class=&quot;highlighter-rouge&quot;&gt;activity_main&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;fragment layout: &lt;code class=&quot;highlighter-rouge&quot;&gt;fragment_shopping&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Dialog layout: &lt;code class=&quot;highlighter-rouge&quot;&gt;dialog_loading&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;资源-id-命名规范&quot;&gt;资源 ID 命名规范&lt;/h3&gt;

&lt;p&gt;（个人习惯）命名模式为：&lt;code class=&quot;highlighter-rouge&quot;&gt;{view_name}_{view 描述}_{xml关联的 Activity}&lt;/code&gt;，例如：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;btn_send_main&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;常见控件View与其缩写对照参考表如下:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;控件&lt;/th&gt;
      &lt;th&gt;缩写&lt;/th&gt;
      &lt;th&gt;控件&lt;/th&gt;
      &lt;th&gt;缩写&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;LinearLayout&lt;/td&gt;
      &lt;td&gt;ll&lt;/td&gt;
      &lt;td&gt;DatePicker&lt;/td&gt;
      &lt;td&gt;dtPk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RelativeLayout&lt;/td&gt;
      &lt;td&gt;rl&lt;/td&gt;
      &lt;td&gt;EditText&lt;/td&gt;
      &lt;td&gt;edt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TextView&lt;/td&gt;
      &lt;td&gt;tv&lt;/td&gt;
      &lt;td&gt;TimePicker&lt;/td&gt;
      &lt;td&gt;tmPk&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Button&lt;/td&gt;
      &lt;td&gt;btn&lt;/td&gt;
      &lt;td&gt;ProgressBar&lt;/td&gt;
      &lt;td&gt;proBar&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ImageButton&lt;/td&gt;
      &lt;td&gt;imgBtn&lt;/td&gt;
      &lt;td&gt;WdbView&lt;/td&gt;
      &lt;td&gt;wv&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ImageView&lt;/td&gt;
      &lt;td&gt;iv&lt;/td&gt;
      &lt;td&gt;Spinner&lt;/td&gt;
      &lt;td&gt;spn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CheckBox&lt;/td&gt;
      &lt;td&gt;cbx&lt;/td&gt;
      &lt;td&gt;ScollView&lt;/td&gt;
      &lt;td&gt;sv&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RadioButton&lt;/td&gt;
      &lt;td&gt;rBtn&lt;/td&gt;
      &lt;td&gt;ListView&lt;/td&gt;
      &lt;td&gt;lv&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;图片资源文件命名&quot;&gt;图片资源文件命名&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;命名&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;bg_xxx&lt;/td&gt;
      &lt;td&gt;这种图片一般那些比较大的图片，比如作为某个Activity的背景等&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;btn_xxx&lt;/td&gt;
      &lt;td&gt;按钮，一般用于按钮，而且这种按钮没有其他状态&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ic_xxx&lt;/td&gt;
      &lt;td&gt;图标，一般用于单个图标，比如启动图片ic_launcher&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bg_描述_状态&lt;/td&gt;
      &lt;td&gt;用于控件上的不同状态&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;btn_描述_状态&lt;/td&gt;
      &lt;td&gt;用于按钮上的不同状态，比如normal，press&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;chx_描述_状态&lt;/td&gt;
      &lt;td&gt;选择框&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;代码风格&quot;&gt;代码风格&lt;/h2&gt;

&lt;h3 id=&quot;大括号风格&quot;&gt;大括号风格&lt;/h3&gt;

&lt;p&gt;行尾和换行（IDE 一般都有代码自动格式化，可以自己修改）&lt;/p&gt;

&lt;h3 id=&quot;空格&quot;&gt;空格&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if else&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;运算符&lt;/code&gt;等后面需用空格隔开&lt;/p&gt;

&lt;h3 id=&quot;方法参数&quot;&gt;方法参数&lt;/h3&gt;

&lt;p&gt;当方法参数数量过多时，需进行换行处理&lt;/p&gt;

&lt;h3 id=&quot;注释&quot;&gt;注释&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;必须要对所有实例变量、类常量进行注释说明&lt;/li&gt;
  &lt;li&gt;必须对所有的类、接口进行注释说明&lt;/li&gt;
  &lt;li&gt;必须对所有的方法进行注释说明&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本文参考自：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.androidchina.net/2141.html&quot;&gt;最佳实践之Android代码规范&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/vipzjyno1/article/details/23542617&quot;&gt;Android 命名规范 （提高代码可以读性）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;​&lt;/p&gt;

</description>
        <pubDate>Wed, 03 May 2017 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/05/03/android-code-guideline/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/05/03/android-code-guideline/</guid>
        
        <category>Android</category>
        
        <category>学习笔记</category>
        
        
      </item>
    
      <item>
        <title>Android Studio快捷键</title>
        <description>&lt;p&gt;想要最全的快捷键？两种方法:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Android Studio 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Preference&lt;/code&gt;中的&lt;code class=&quot;highlighter-rouge&quot;&gt;keymap&lt;/code&gt;，里面就是所有的快捷键了&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Android Studio 是基于 Intellij Idea 的，所以两者的快捷键通用，官方给出的快捷键大全（PDF 版）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Linux / Windows&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard.pdf&quot;&gt;Android Studio 快捷键 PDF(Linus/Win）&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mac&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard_Mac.pdf&quot;&gt;Android Studio 快捷键 PDF(Mac）&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 28 Apr 2017 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/04/28/android-studio-keymap/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/04/28/android-studio-keymap/</guid>
        
        <category>Android</category>
        
        <category>工具</category>
        
        
      </item>
    
      <item>
        <title>总有相见恨晚的朋友——认识 markdown</title>
        <description>&lt;h1 id=&quot;目录&quot;&gt;目录&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#前言&quot;&gt;前言&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#编辑器初体验&quot;&gt;编辑器初体验&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;#语法&quot;&gt;语法&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;​&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;总会有相见恨晚的时候，markdown 就给了我这种感觉。&lt;/p&gt;

&lt;p&gt;了解 markdown 之后，才发现文字能够以如此简单的方式变得优雅。对写作者和设计者来说，对文字排版有更高的要求；但对于一般人，markdown 足以满足需要了。而且markdown 还有程序员喜欢的代码高亮功能。&lt;/p&gt;

&lt;p&gt;因此，掌握了 markdown 的语法后，我就开始寻找一款得心应手的工具。&lt;/p&gt;

&lt;h2 id=&quot;编辑器初体验&quot;&gt;编辑器初体验&lt;/h2&gt;

&lt;p&gt;我使用软件的习惯是，在正式使用之前，体验所有类似功能的软件，寻找最好/适合的软件，然后一直用下去（当然，需求增加导致更换软件也挺正常的），markdown 也一样。我理想中的 markdown 编辑器应该是这样的：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;markdown 语法支持&lt;/li&gt;
  &lt;li&gt;界面美观，操作简便&lt;/li&gt;
  &lt;li&gt;有文档管理功能&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;怀着这样的期许，开始了漫漫寻觅之路。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Mou/MacDown：Mou 其实挺不错的，不少人在用，但是没有代码高亮功能。原作者已经出售了该软件，目前1.0正式版还没有完全发售。MacDown 的作者参考了 Mou 的设计，也有代码高亮功能。但是和 Mou 一样没有文档管理功能。&lt;/li&gt;
  &lt;li&gt;作业部落：体验过一段时间，功能很丰富，但是没有我想要的。（弱水三千，只取一瓢呀）。它的文档管理不直观，而且很依赖网络。虽然已经出了客户端，但是功能很简陋。此外，所有在线类的编辑器有一个潜在的缺点是：数据安全。个人或者小团队写的软件，可能会因为各种原因导致软件挂了。即使是大公司的产品也不一定非常可靠，比如Google Code. 所以要么文件存储在本地，要么有可靠的云服务。&lt;/li&gt;
  &lt;li&gt;马克飞象：前面说到数据安全。马克飞象就是专门为印象笔记打造的编辑器。缺点在于文件或者图片稍多，软件会卡顿，同步很慢。&lt;/li&gt;
  &lt;li&gt;Alternote：也是和印象笔记同步的软件。文档管理就是我想要的，而且界面美观！如果markdown 支持得更完善就好了。官网说后续版本会支持，期待中。  &lt;/li&gt;
  &lt;li&gt;Typora：我现在用的 markdown 编辑器，特点是所见所得，而不是一般编辑器的两栏设计（编辑和预览）。还有就是美观，自从使用了 Mac 后，美观的重要性排到第一了（和实用性并列）。&lt;/li&gt;
  &lt;li&gt;Marboo：五星推荐！之前一直在找带有文档管理功能的 markdown 编辑器，可是一直没有找到好用的，直到前几天在 Mac App Store 找到了 marboo. 这款软件分为普通版和 pro 版，普通版免费，完全能满足需要。marboo 没有编辑器的功能，编辑时会调用系统安装的编辑器。它主要就是用来管理和显示 markdown 文件，显示效果就是本文的显示效果。配合 dropbox 的使用，简直完美！一开始使用起来有点问题，加了QQ群直接询问作者了。总之，推荐你去试试。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;综上，最后留在我电脑里的软件是：Typora 和 Marboo&lt;/p&gt;

&lt;p&gt;接下来测试一下 markdown 显示效果。&lt;/p&gt;

&lt;h2 id=&quot;语法&quot;&gt;语法&lt;/h2&gt;

&lt;h3 id=&quot;标题一&quot;&gt;标题一&lt;/h3&gt;

&lt;h4 id=&quot;标题二&quot;&gt;标题二&lt;/h4&gt;

&lt;h5 id=&quot;标题三&quot;&gt;标题三&lt;/h5&gt;

&lt;h3 id=&quot;加粗和倾斜&quot;&gt;加粗和倾斜&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;加粗&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;倾斜&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;无序列表&quot;&gt;无序列表&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;苹果&lt;/li&gt;
  &lt;li&gt;香蕉&lt;/li&gt;
  &lt;li&gt;橙子&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;有序列表&quot;&gt;有序列表&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;第一个&lt;/li&gt;
  &lt;li&gt;第二个&lt;/li&gt;
  &lt;li&gt;第三个&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;代码块&quot;&gt;代码块&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-Java&quot;&gt;public class IPDemo {
    public static void main(String[] args) throws UnknownHostException {
        InetAddress address = InetAddress.getLocalHost();
        System.out.println(address.toString());
        System.out.println(&quot;address &quot;+address.getHostAddress());
        System.out.println(&quot;name &quot;+address.getHostName());

        InetAddress address1 = InetAddress.getByName(&quot;www.baidu.com&quot;);
        System.out.println(&quot;address &quot;+address1.getHostAddress());
        System.out.println(&quot;name &quot; + address1.getHostName());

        InetAddress[] address2 = InetAddress.getAllByName(&quot;www.baidu.com&quot;);
        for (int i = 0; i &amp;lt; address2.length; i++) {
            System.out.println(&quot;address &quot;+i+&quot; &quot;+address2[i].getHostAddress());

            System.out.println(&quot;name &quot;+i+&quot; &quot;+address2[i].getHostName());
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;行内代码块&quot;&gt;行内代码块&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;我是行内代码块&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;表格&quot;&gt;表格&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Tables&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Are&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Cool&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;col 3 is&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;right-aligned&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1600&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;col 2 is&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;centered&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zebra stripes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;are neat&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;引用&quot;&gt;引用&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;床前明月光&lt;/p&gt;

  &lt;p&gt;疑似地上霜&lt;/p&gt;

  &lt;p&gt;举头望明月&lt;/p&gt;

  &lt;p&gt;低头思故乡&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;链接&quot;&gt;链接&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com&quot;&gt;Google&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;插入图片&quot;&gt;插入图片&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/img/eagle.jpg&quot; alt=&quot;Post Sample Image&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 16 Apr 2017 20:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/04/16/markdown-test/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/04/16/markdown-test/</guid>
        
        <category>markdown</category>
        
        
      </item>
    
  </channel>
</rss>
